/*
 * Copyright (C) 2014 glaxy
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package cryptohelper.view;

import cryptohelper.controller.CommunicationController;
import cryptohelper.model.Proposta;
import cryptohelper.model.SistemaCifratura;
import cryptohelper.model.Studente;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author glaxy
 */
public class PropostePanel extends javax.swing.JPanel {

    /**
     * Creates new form propostePanel
     *
     * @param st studente che ha fatto login
     */
    public PropostePanel(Studente st) {
        studente = st;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        rifiutaPropostaButton = new javax.swing.JButton();
        accettaPropostaButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        proposteRicevuteValutareList = new javax.swing.JList();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        proposteInviateValutateList = new javax.swing.JList();
        jPanel7 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        inviaPropostaButton = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        sdcNonPropostiList = new javax.swing.JList();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        compagniList = new javax.swing.JList();

        jPanel6.setLayout(new java.awt.BorderLayout());

        rifiutaPropostaButton.setText("Rifiuta");
        rifiutaPropostaButton.setEnabled(false);
        rifiutaPropostaButton.setFocusable(false);
        rifiutaPropostaButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        rifiutaPropostaButton.setPreferredSize(new java.awt.Dimension(65, 33));
        rifiutaPropostaButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        rifiutaPropostaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rifiutaPropostaButtonActionPerformed(evt);
            }
        });
        jPanel13.add(rifiutaPropostaButton);

        accettaPropostaButton.setText("Accetta");
        accettaPropostaButton.setEnabled(false);
        accettaPropostaButton.setFocusable(false);
        accettaPropostaButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        accettaPropostaButton.setPreferredSize(new java.awt.Dimension(65, 33));
        accettaPropostaButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        accettaPropostaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accettaPropostaButtonActionPerformed(evt);
            }
        });
        jPanel13.add(accettaPropostaButton);

        jPanel6.add(jPanel13, java.awt.BorderLayout.PAGE_END);

        proposteRicevuteValutareList.setModel(new javax.swing.DefaultListModel<Proposta>());
        proposteRicevuteValutareList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        proposteRicevuteValutareList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                proposteRicevuteValutareListValueChanged(evt);
            }
        });
        proposteRicevuteValutareList.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                proposteRicevuteValutareListAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                proposteRicevuteValutareListAncestorRemoved(evt);
            }
        });
        jScrollPane1.setViewportView(proposteRicevuteValutareList);

        jPanel6.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Ricevute da valutare", jPanel6);

        jPanel9.setLayout(new javax.swing.BoxLayout(jPanel9, javax.swing.BoxLayout.LINE_AXIS));

        proposteInviateValutateList.setModel(new javax.swing.DefaultListModel<Proposta>());
        proposteInviateValutateList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        proposteInviateValutateList.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                proposteInviateValutateListAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                proposteInviateValutateListAncestorRemoved(evt);
            }
        });
        jScrollPane4.setViewportView(proposteInviateValutateList);

        jPanel9.add(jScrollPane4);

        jTabbedPane1.addTab("Inviate e valutate", jPanel9);

        jPanel7.setLayout(new java.awt.BorderLayout());

        inviaPropostaButton.setText("Invia Proposta");
        inviaPropostaButton.setEnabled(false);
        inviaPropostaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inviaPropostaButtonActionPerformed(evt);
            }
        });
        jPanel4.add(inviaPropostaButton);

        jPanel7.add(jPanel4, java.awt.BorderLayout.PAGE_END);

        jPanel12.setLayout(new javax.swing.BoxLayout(jPanel12, javax.swing.BoxLayout.LINE_AXIS));

        jPanel11.setLayout(new javax.swing.BoxLayout(jPanel11, javax.swing.BoxLayout.PAGE_AXIS));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Sistemi di cifratura");
        jPanel11.add(jLabel6);

        sdcNonPropostiList.setModel(new javax.swing.DefaultListModel<SistemaCifratura>());
        sdcNonPropostiList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                sdcNonPropostiListValueChanged(evt);
            }
        });
        sdcNonPropostiList.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                sdcNonPropostiListAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                sdcNonPropostiListAncestorRemoved(evt);
            }
        });
        jScrollPane3.setViewportView(sdcNonPropostiList);

        jPanel11.add(jScrollPane3);

        jPanel12.add(jPanel11);

        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.PAGE_AXIS));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Studenti");
        jPanel5.add(jLabel5);

        compagniList.setModel(new javax.swing.DefaultListModel<Studente>());
        compagniList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                compagniListValueChanged(evt);
            }
        });
        compagniList.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                compagniListAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                compagniListAncestorRemoved(evt);
            }
        });
        jScrollPane5.setViewportView(compagniList);

        jPanel5.add(jScrollPane5);

        jPanel12.add(jPanel5);

        jPanel7.add(jPanel12, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Crea Nuova", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 568, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rifiutaPropostaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rifiutaPropostaButtonActionPerformed
        try {
            Proposta proposta = (Proposta) proposteRicevuteValutareList.getSelectedValue();
            if (commController.inviaDecisione(proposta, "refused")) {
                DefaultListModel<Proposta> dlm = (DefaultListModel<Proposta>) proposteRicevuteValutareList.getModel();
                dlm.removeElement(proposta);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_rifiutaPropostaButtonActionPerformed

    private void accettaPropostaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accettaPropostaButtonActionPerformed
        try {
            Proposta proposta = (Proposta) proposteRicevuteValutareList.getSelectedValue();
            if (commController.inviaDecisione(proposta, "accepted")) {
                DefaultListModel<Proposta> dlm = (DefaultListModel<Proposta>) proposteRicevuteValutareList.getModel();
                dlm.removeElement(proposta);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_accettaPropostaButtonActionPerformed

    private void proposteRicevuteValutareListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_proposteRicevuteValutareListValueChanged
        if (evt.getValueIsAdjusting() == false) {
            if (proposteRicevuteValutareList.getSelectedIndex() == -1) {
                accettaPropostaButton.setEnabled(false);
                rifiutaPropostaButton.setEnabled(false);
            } else {
                accettaPropostaButton.setEnabled(true);
                rifiutaPropostaButton.setEnabled(true);
            }
        }
    }//GEN-LAST:event_proposteRicevuteValutareListValueChanged

    private void proposteRicevuteValutareListAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_proposteRicevuteValutareListAncestorAdded
        DefaultListModel<Proposta> dlm = (DefaultListModel<Proposta>) proposteRicevuteValutareList.getModel();
        List<Proposta> listaProposte = null;
        try {
            listaProposte = commController.getProposte(studente);
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Proposta p : listaProposte) {
            dlm.addElement(p);
        }
    }//GEN-LAST:event_proposteRicevuteValutareListAncestorAdded

    private void proposteRicevuteValutareListAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_proposteRicevuteValutareListAncestorRemoved
        DefaultListModel<Proposta> dlm = (DefaultListModel<Proposta>) proposteRicevuteValutareList.getModel();
        dlm.clear();
    }//GEN-LAST:event_proposteRicevuteValutareListAncestorRemoved

    private void proposteInviateValutateListAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_proposteInviateValutateListAncestorAdded
        DefaultListModel<Proposta> dlm = (DefaultListModel<Proposta>) proposteInviateValutateList.getModel();
        List<Proposta> listaProposteValutate = null;
        try {
            listaProposteValutate = commController.getAccettazioneProposte(studente);
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Proposta p : listaProposteValutate) {
            dlm.addElement(p);
        }
    }//GEN-LAST:event_proposteInviateValutateListAncestorAdded

    private void proposteInviateValutateListAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_proposteInviateValutateListAncestorRemoved
        DefaultListModel<Proposta> dlm = (DefaultListModel<Proposta>) proposteInviateValutateList.getModel();
        dlm.clear();
    }//GEN-LAST:event_proposteInviateValutateListAncestorRemoved

    private void inviaPropostaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inviaPropostaButtonActionPerformed
        SistemaCifratura sdc = (SistemaCifratura) sdcNonPropostiList.getSelectedValue();
        Studente partner = (Studente) compagniList.getSelectedValue();
        try {
            if (commController.inviaProposta(studente, partner, sdc)) {
                DefaultListModel<SistemaCifratura> dlmElencoSdcNonProposti = (DefaultListModel<SistemaCifratura>) sdcNonPropostiList.getModel();
                dlmElencoSdcNonProposti.removeElement(sdc);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_inviaPropostaButtonActionPerformed

    private void sdcNonPropostiListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_sdcNonPropostiListValueChanged
        if (evt.getValueIsAdjusting() == false) {
            if (sdcNonPropostiList.getSelectedIndex() == -1 || compagniList.getSelectedIndex() == -1) {
                inviaPropostaButton.setEnabled(false);
            } else {
                inviaPropostaButton.setEnabled(true);
            }
        }
    }//GEN-LAST:event_sdcNonPropostiListValueChanged

    private void sdcNonPropostiListAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_sdcNonPropostiListAncestorAdded
        DefaultListModel<SistemaCifratura> dlm = (DefaultListModel<SistemaCifratura>) sdcNonPropostiList.getModel();
        List<SistemaCifratura> listasdc = null;
        try {
            listasdc = SistemaCifratura.caricaSistemiCifraturaNonProposti(studente);
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (SistemaCifratura sdc : listasdc) {
            dlm.addElement(sdc);
        }
    }//GEN-LAST:event_sdcNonPropostiListAncestorAdded

    private void sdcNonPropostiListAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_sdcNonPropostiListAncestorRemoved
        DefaultListModel<SistemaCifratura> dlm = (DefaultListModel<SistemaCifratura>) sdcNonPropostiList.getModel();
        dlm.clear();
    }//GEN-LAST:event_sdcNonPropostiListAncestorRemoved

    private void compagniListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_compagniListValueChanged
        if (evt.getValueIsAdjusting() == false) {
            if (sdcNonPropostiList.getSelectedIndex() == -1 || compagniList.getSelectedIndex() == -1) {
                inviaPropostaButton.setEnabled(false);
            } else {
                inviaPropostaButton.setEnabled(true);
            }
        }
    }//GEN-LAST:event_compagniListValueChanged

    private void compagniListAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_compagniListAncestorAdded
        DefaultListModel<Studente> dlm = (DefaultListModel<Studente>) compagniList.getModel();
        List<Studente> listaCompagni = null;
        try {
            listaCompagni = studente.elencaCompagni();
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Studente st : listaCompagni) {
            dlm.addElement(st);
        }
    }//GEN-LAST:event_compagniListAncestorAdded

    private void compagniListAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_compagniListAncestorRemoved
        DefaultListModel<SistemaCifratura> dlm = (DefaultListModel<SistemaCifratura>) compagniList.getModel();
        dlm.clear();
    }//GEN-LAST:event_compagniListAncestorRemoved

    Studente studente = null;
    CommunicationController commController = CommunicationController.getInstance();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accettaPropostaButton;
    private javax.swing.JList compagniList;
    private javax.swing.JButton inviaPropostaButton;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JList proposteInviateValutateList;
    private javax.swing.JList proposteRicevuteValutareList;
    private javax.swing.JButton rifiutaPropostaButton;
    private javax.swing.JList sdcNonPropostiList;
    // End of variables declaration//GEN-END:variables
}
