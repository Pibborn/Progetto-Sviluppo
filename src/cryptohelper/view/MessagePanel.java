/*
 * Copyright (C) 2014 glaxy
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package cryptohelper.view;

import cryptohelper.controller.CommunicationController;
import cryptohelper.model.Messaggio;
import cryptohelper.model.MessaggioDestinatario;
import cryptohelper.model.MessaggioMittente;
import cryptohelper.model.Studente;
import cryptohelper.model.UserInfo;
import java.awt.Component;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JList;

/**
 *
 * @author glaxy
 */
public class MessagePanel extends javax.swing.JPanel {

    /**
     * Creates new form messagePanel
     *
     * @param st lo studente che ha fatto login
     */
    public MessagePanel(Studente st) {
        studente = st;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        messaggiRicevutiPanel = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        messaggiRicevutiList = new javax.swing.JList();
        jToolBar1 = new javax.swing.JToolBar();
        ricaricaRicevutiButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        eliminaMessaggioRicevutoButton = new javax.swing.JButton();
        rispondiButton = new javax.swing.JButton();
        decifraMessaggioRicevutoButton = new javax.swing.JButton();
        messaggiInviatiPanel = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        messaggiInviatiList = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        eliminaInviatiButton = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        messaggiBozzePanel = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        messaggiBozzaList = new javax.swing.JList();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jPanel16 = new javax.swing.JPanel();
        jButton14 = new javax.swing.JButton();
        eliminaBozzaButton = new javax.swing.JButton();
        messaggiCreaPanel = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        titoloNuovoMessaggioField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        destinatariComboBox = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        nuovoMessaggioFeedback = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        linguaComboBox = new javax.swing.JComboBox();
        jPanel18 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        salvaBozzaButton = new javax.swing.JButton();
        cifraButton = new javax.swing.JButton();
        inviaButton = new javax.swing.JButton();
        jPanel23 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        corpoNuovoMessaggio = new javax.swing.JTextArea();
        jPanel24 = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        jTextArea6 = new javax.swing.JTextArea();

        setLayout(new java.awt.BorderLayout());

        messaggiRicevutiPanel.setLayout(new javax.swing.BoxLayout(messaggiRicevutiPanel, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel17.setLayout(new java.awt.BorderLayout());

        messaggiRicevutiList.setModel(new javax.swing.DefaultListModel<MessaggioDestinatario>());
        messaggiRicevutiList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        messaggiRicevutiList.setCellRenderer(new DefaultListCellRenderer() {

            @Override
            public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                MessaggioDestinatario messaggio = (MessaggioDestinatario) value;
                setText((!messaggio.isLetto() ? "** " : "") + "Mittente: " + messaggio.getMittente() + "; Titolo: " + messaggio.getTitolo());
                if (isSelected) {
                    setBackground(list.getSelectionBackground());
                    setForeground(list.getSelectionForeground());
                } else {
                    setBackground(list.getBackground());
                    setForeground(list.getForeground());
                }
                return this;
            }
        });
        messaggiRicevutiList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                messaggiRicevutiListValueChanged(evt);
            }
        });
        messaggiRicevutiList.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                messaggiRicevutiListAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                messaggiRicevutiListAncestorRemoved(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane6.setViewportView(messaggiRicevutiList);

        jPanel17.add(jScrollPane6, java.awt.BorderLayout.CENTER);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        ricaricaRicevutiButton.setText("Ricarica");
        ricaricaRicevutiButton.setFocusable(false);
        ricaricaRicevutiButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ricaricaRicevutiButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ricaricaRicevutiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ricaricaRicevutiButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(ricaricaRicevutiButton);

        jPanel17.add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        messaggiRicevutiPanel.add(jPanel17);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane9.setViewportView(jTextArea1);

        jPanel2.add(jScrollPane9, java.awt.BorderLayout.CENTER);

        eliminaMessaggioRicevutoButton.setText("Elimina");
        eliminaMessaggioRicevutoButton.setEnabled(false);
        eliminaMessaggioRicevutoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminaMessaggioRicevutoButtonActionPerformed(evt);
            }
        });
        jPanel1.add(eliminaMessaggioRicevutoButton);

        rispondiButton.setText("Rispondi");
        rispondiButton.setEnabled(false);
        rispondiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rispondiButtonActionPerformed(evt);
            }
        });
        jPanel1.add(rispondiButton);

        decifraMessaggioRicevutoButton.setText("Decifra");
        decifraMessaggioRicevutoButton.setEnabled(false);
        decifraMessaggioRicevutoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decifraMessaggioRicevutoButtonActionPerformed(evt);
            }
        });
        jPanel1.add(decifraMessaggioRicevutoButton);

        jPanel2.add(jPanel1, java.awt.BorderLayout.PAGE_END);

        messaggiRicevutiPanel.add(jPanel2);

        jTabbedPane2.addTab("Ricevuti", messaggiRicevutiPanel);

        messaggiInviatiPanel.setLayout(new javax.swing.BoxLayout(messaggiInviatiPanel, javax.swing.BoxLayout.PAGE_AXIS));

        messaggiInviatiList.setModel(new javax.swing.DefaultListModel<MessaggioMittente>());
        messaggiInviatiList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        messaggiInviatiList.setCellRenderer(new DefaultListCellRenderer() {

            @Override
            public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                MessaggioMittente messaggio = (MessaggioMittente) value;
                setText("Destinatario: " + messaggio.getDestinatario() + "; Titolo: " + messaggio.getTitolo());
                if (isSelected) {
                    setBackground(list.getSelectionBackground());
                    setForeground(list.getSelectionForeground());
                } else {
                    setBackground(list.getBackground());
                    setForeground(list.getForeground());
                }
                return this;
            }
        });
        messaggiInviatiList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                messaggiInviatiListValueChanged(evt);
            }
        });
        messaggiInviatiList.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                messaggiInviatiListAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                messaggiInviatiListAncestorRemoved(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane11.setViewportView(messaggiInviatiList);

        messaggiInviatiPanel.add(jScrollPane11);

        jPanel3.setLayout(new java.awt.BorderLayout());

        eliminaInviatiButton.setText("Elimina");
        eliminaInviatiButton.setEnabled(false);
        eliminaInviatiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminaInviatiButtonActionPerformed(evt);
            }
        });
        jPanel8.add(eliminaInviatiButton);

        jPanel3.add(jPanel8, java.awt.BorderLayout.PAGE_END);

        jTextArea2.setColumns(20);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jScrollPane10.setViewportView(jTextArea2);

        jPanel3.add(jScrollPane10, java.awt.BorderLayout.CENTER);

        messaggiInviatiPanel.add(jPanel3);

        jTabbedPane2.addTab("Inviati", messaggiInviatiPanel);

        messaggiBozzePanel.setLayout(new javax.swing.BoxLayout(messaggiBozzePanel, javax.swing.BoxLayout.PAGE_AXIS));

        messaggiBozzaList.setModel(new javax.swing.DefaultListModel<MessaggioMittente>());
        messaggiBozzaList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        messaggiBozzaList.setCellRenderer(new DefaultListCellRenderer() {

            @Override
            public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                MessaggioMittente messaggio = (MessaggioMittente) value;
                setText("Destinatario: " + (messaggio.getDestinatario() == null ? "**nessun destinatario**" : messaggio.getDestinatario()) + "; Titolo: " + (messaggio.getTitolo().equals("") ? "**nessun titolo**" : messaggio.getTitolo()));
                if (isSelected) {
                    setBackground(list.getSelectionBackground());
                    setForeground(list.getSelectionForeground());
                } else {
                    setBackground(list.getBackground());
                    setForeground(list.getForeground());
                }
                return this;
            }
        });
        messaggiBozzaList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                messaggiBozzaListValueChanged(evt);
            }
        });
        messaggiBozzaList.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                messaggiBozzaListAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                messaggiBozzaListAncestorRemoved(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane12.setViewportView(messaggiBozzaList);

        messaggiBozzePanel.add(jScrollPane12);

        jPanel15.setLayout(new java.awt.BorderLayout());

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane13.setViewportView(jTextArea3);

        jPanel15.add(jScrollPane13, java.awt.BorderLayout.CENTER);

        jButton14.setText("Componi");
        jButton14.setEnabled(false);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel16.add(jButton14);

        eliminaBozzaButton.setText("Elimina");
        eliminaBozzaButton.setEnabled(false);
        eliminaBozzaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminaBozzaButtonActionPerformed(evt);
            }
        });
        jPanel16.add(eliminaBozzaButton);

        jPanel15.add(jPanel16, java.awt.BorderLayout.PAGE_END);

        messaggiBozzePanel.add(jPanel15);

        jTabbedPane2.addTab("Bozze", messaggiBozzePanel);

        messaggiCreaPanel.setLayout(new javax.swing.BoxLayout(messaggiCreaPanel, javax.swing.BoxLayout.PAGE_AXIS));

        titoloNuovoMessaggioField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                titoloNuovoMessaggioFieldKeyTyped(evt);
            }
        });

        jLabel7.setText("Destinatario:");

        destinatariComboBox.setModel(new javax.swing.DefaultComboBoxModel<UserInfo>());
        destinatariComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destinatariComboBoxActionPerformed(evt);
            }
        });
        destinatariComboBox.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                destinatariComboBoxAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                destinatariComboBoxAncestorRemoved(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel8.setText("Titolo:");

        nuovoMessaggioFeedback.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nuovoMessaggioFeedback.setText("Componi il messaggio");

        jLabel1.setText("Lingua:");

        linguaComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Italiano", "Inglese", "Francese" }));
        linguaComboBox.setSelectedIndex(-1);
        linguaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                linguaComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(nuovoMessaggioFeedback, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(titoloNuovoMessaggioField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(destinatariComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(linguaComboBox, 0, 235, Short.MAX_VALUE))
                .addContainerGap(163, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nuovoMessaggioFeedback)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destinatariComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titoloNuovoMessaggioField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(linguaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(45, 45, 45))
        );

        messaggiCreaPanel.add(jPanel19);

        jPanel18.setLayout(new java.awt.BorderLayout());

        jPanel22.setLayout(new javax.swing.BoxLayout(jPanel22, javax.swing.BoxLayout.PAGE_AXIS));
        jPanel18.add(jPanel22, java.awt.BorderLayout.PAGE_START);

        salvaBozzaButton.setText("Salva bozza");
        salvaBozzaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvaBozzaButtonActionPerformed(evt);
            }
        });
        jPanel21.add(salvaBozzaButton);

        cifraButton.setText("Cifra");
        cifraButton.setEnabled(false);
        cifraButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cifraButtonActionPerformed(evt);
            }
        });
        jPanel21.add(cifraButton);

        inviaButton.setText("Invia");
        inviaButton.setEnabled(false);
        inviaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inviaButtonActionPerformed(evt);
            }
        });
        jPanel21.add(inviaButton);

        jPanel18.add(jPanel21, java.awt.BorderLayout.PAGE_END);

        jPanel23.setLayout(new javax.swing.BoxLayout(jPanel23, javax.swing.BoxLayout.LINE_AXIS));

        jPanel25.setLayout(new java.awt.BorderLayout());

        corpoNuovoMessaggio.setColumns(20);
        corpoNuovoMessaggio.setRows(5);
        corpoNuovoMessaggio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                corpoNuovoMessaggioKeyTyped(evt);
            }
        });
        jScrollPane8.setViewportView(corpoNuovoMessaggio);

        jPanel25.add(jScrollPane8, java.awt.BorderLayout.CENTER);

        jPanel23.add(jPanel25);

        jPanel24.setLayout(new java.awt.BorderLayout());

        jTextArea6.setEditable(false);
        jTextArea6.setColumns(20);
        jTextArea6.setLineWrap(true);
        jTextArea6.setRows(5);
        jScrollPane14.setViewportView(jTextArea6);

        jPanel24.add(jScrollPane14, java.awt.BorderLayout.CENTER);

        jPanel23.add(jPanel24);

        jPanel18.add(jPanel23, java.awt.BorderLayout.CENTER);

        messaggiCreaPanel.add(jPanel18);

        jTabbedPane2.addTab("Crea Nuovo", messaggiCreaPanel);

        add(jTabbedPane2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void messaggiRicevutiListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_messaggiRicevutiListValueChanged
        if (evt.getValueIsAdjusting() == false) {
            if (messaggiRicevutiList.getSelectedIndex() == -1) {
                jTextArea1.setText("");
                eliminaMessaggioRicevutoButton.setEnabled(false);
                rispondiButton.setEnabled(false);
                decifraMessaggioRicevutoButton.setEnabled(false);
            } else {
                MessaggioDestinatario md = (MessaggioDestinatario) messaggiRicevutiList.getSelectedValue();
                jTextArea1.setText(md.getTestoCifrato());
                eliminaMessaggioRicevutoButton.setEnabled(true);
                rispondiButton.setEnabled(true);
                decifraMessaggioRicevutoButton.setEnabled(true);
            }
        }
    }//GEN-LAST:event_messaggiRicevutiListValueChanged

    private void messaggiRicevutiListAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_messaggiRicevutiListAncestorAdded
        try {
            DefaultListModel<MessaggioDestinatario> dlm = (DefaultListModel<MessaggioDestinatario>) messaggiRicevutiList.getModel();
            List<MessaggioDestinatario> listaMessaggiRicevuti = Messaggio.caricaRicevuti(studente);
            for (MessaggioDestinatario m : listaMessaggiRicevuti) {
                dlm.addElement(m);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_messaggiRicevutiListAncestorAdded

    private void messaggiRicevutiListAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_messaggiRicevutiListAncestorRemoved
        DefaultListModel<MessaggioDestinatario> dlm = (DefaultListModel<MessaggioDestinatario>) messaggiRicevutiList.getModel();
        dlm.clear();
    }//GEN-LAST:event_messaggiRicevutiListAncestorRemoved

    private void ricaricaRicevutiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ricaricaRicevutiButtonActionPerformed
        try {
            DefaultListModel<MessaggioDestinatario> dlm = (DefaultListModel<MessaggioDestinatario>) messaggiRicevutiList.getModel();
            dlm.clear();
            List<MessaggioDestinatario> listaMessaggiRicevuti = Messaggio.caricaRicevuti(studente);
            for (MessaggioDestinatario m : listaMessaggiRicevuti) {
                dlm.addElement(m);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_ricaricaRicevutiButtonActionPerformed

    private void eliminaMessaggioRicevutoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminaMessaggioRicevutoButtonActionPerformed
        try {
            MessaggioDestinatario daCancellare = (MessaggioDestinatario) messaggiRicevutiList.getSelectedValue();
            if (daCancellare.elimina()) {
                DefaultListModel<MessaggioDestinatario> dlm = (DefaultListModel<MessaggioDestinatario>) messaggiRicevutiList.getModel();
                dlm.removeElement(daCancellare);
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_eliminaMessaggioRicevutoButtonActionPerformed

    private void rispondiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rispondiButtonActionPerformed
        messaggioTemp = (Messaggio) messaggiRicevutiList.getSelectedValue();
        jTabbedPane2.setSelectedIndex(3);
    }//GEN-LAST:event_rispondiButtonActionPerformed

    private void decifraMessaggioRicevutoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decifraMessaggioRicevutoButtonActionPerformed
        try {
            Messaggio oraLetto = (Messaggio) messaggiRicevutiList.getSelectedValue();
            int indiceLetto = messaggiRicevutiList.getSelectedIndex();
            oraLetto.decifra();
            oraLetto.setLetto(true);
            oraLetto.save();
            jTextArea1.setText(oraLetto.getTesto());
            DefaultListModel<MessaggioDestinatario> dlm = (DefaultListModel<MessaggioDestinatario>) messaggiRicevutiList.getModel();
            dlm.set(indiceLetto, oraLetto);
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_decifraMessaggioRicevutoButtonActionPerformed

    private void messaggiInviatiListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_messaggiInviatiListValueChanged
        if (evt.getValueIsAdjusting() == false) {
            if (messaggiInviatiList.getSelectedIndex() == -1) {
                jTextArea2.setText("");
                eliminaInviatiButton.setEnabled(false);
            } else {
                MessaggioMittente md = (MessaggioMittente) messaggiInviatiList.getSelectedValue();
                jTextArea2.setText(md.getTesto());
                eliminaInviatiButton.setEnabled(true);
            }
        }
    }//GEN-LAST:event_messaggiInviatiListValueChanged

    private void messaggiInviatiListAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_messaggiInviatiListAncestorAdded
        try {
            DefaultListModel<MessaggioMittente> dlm = (DefaultListModel<MessaggioMittente>) messaggiInviatiList.getModel();
            List<MessaggioMittente> listaMessaggiInviati = Messaggio.caricaInviati(studente);
            for (MessaggioMittente m : listaMessaggiInviati) {
                dlm.addElement(m);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_messaggiInviatiListAncestorAdded

    private void messaggiInviatiListAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_messaggiInviatiListAncestorRemoved
        DefaultListModel<MessaggioMittente> dlm = (DefaultListModel<MessaggioMittente>) messaggiInviatiList.getModel();
        dlm.clear();
    }//GEN-LAST:event_messaggiInviatiListAncestorRemoved

    private void eliminaInviatiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminaInviatiButtonActionPerformed
        try {
            Messaggio daCancellare = (Messaggio) messaggiInviatiList.getSelectedValue();
            if (daCancellare.elimina()) {
                DefaultListModel<MessaggioMittente> dlm = (DefaultListModel<MessaggioMittente>) messaggiInviatiList.getModel();
                dlm.removeElement(daCancellare);
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_eliminaInviatiButtonActionPerformed

    private void messaggiBozzaListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_messaggiBozzaListValueChanged
        if (evt.getValueIsAdjusting() == false) {
            if (messaggiBozzaList.getSelectedIndex() == -1) {
                jTextArea3.setText("");
                jButton14.setEnabled(false);
                eliminaBozzaButton.setEnabled(false);
            } else {
                MessaggioMittente md = (MessaggioMittente) messaggiBozzaList.getSelectedValue();
                jTextArea3.setText(md.getTesto());
                jButton14.setEnabled(true);
                eliminaBozzaButton.setEnabled(true);
            }
        }
    }//GEN-LAST:event_messaggiBozzaListValueChanged

    private void messaggiBozzaListAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_messaggiBozzaListAncestorAdded
        try {
            DefaultListModel<MessaggioMittente> dlm = (DefaultListModel<MessaggioMittente>) messaggiBozzaList.getModel();
            List<MessaggioMittente> listaBozze = Messaggio.caricaBozze(studente);
            for (MessaggioMittente m : listaBozze) {
                dlm.addElement(m);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_messaggiBozzaListAncestorAdded

    private void messaggiBozzaListAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_messaggiBozzaListAncestorRemoved
        DefaultListModel<MessaggioMittente> dlm = (DefaultListModel<MessaggioMittente>) messaggiBozzaList.getModel();
        dlm.removeAllElements();
    }//GEN-LAST:event_messaggiBozzaListAncestorRemoved

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        messaggioTemp = (Messaggio) messaggiBozzaList.getSelectedValue();
        jTabbedPane2.setSelectedIndex(3);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void eliminaBozzaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminaBozzaButtonActionPerformed
        try {
            MessaggioMittente daCancellare = (MessaggioMittente) messaggiBozzaList.getSelectedValue();
            if (daCancellare.elimina()) {
                DefaultListModel<MessaggioMittente> dlm = (DefaultListModel<MessaggioMittente>) messaggiBozzaList.getModel();
                dlm.removeElement(daCancellare);
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_eliminaBozzaButtonActionPerformed

    private void destinatariComboBoxAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_destinatariComboBoxAncestorAdded
        try {
            int idNuovoDest = -1;
            /* se c'è già un messaggio a cui si fa riferimento (rispondi o componi bozza) */
            if (messaggioTemp != null) {
                /* se sto continuando a comporre una bozza */
                if (messaggioTemp.isBozza()) {
                    UserInfo dest = messaggioTemp.getDestinatario();
                    if (dest != null) {
                        idNuovoDest = dest.getId();
                    }
                    titoloNuovoMessaggioField.setText(messaggioTemp.getTitolo());
                    corpoNuovoMessaggio.setText(messaggioTemp.getTesto());
                } else {
                    /* sto rispondendo ad un messaggio */
                    idNuovoDest = messaggioTemp.getMittente().getId();
                    messaggioTemp = new Messaggio(studente);
                }
            } else {
                /* non sto nè rispondendo a qualcuno nè continuando una bozza */
                messaggioTemp = new Messaggio(studente);
            }
            DefaultComboBoxModel<UserInfo> dlm = (DefaultComboBoxModel<UserInfo>) destinatariComboBox.getModel();
            List<UserInfo> listaDestinatari = commController.getDestinatari(studente);
            /* carico l'elenco destinatari e se necessario mi segno quale selezionare */
            int indexToSelect = -1;
            for (int i = 0; i < listaDestinatari.size(); i++) {
                UserInfo dest = listaDestinatari.get(i);
                dlm.addElement(dest);
                if (dest.getId() == idNuovoDest) {
                    indexToSelect = i;
                }
            }
            destinatariComboBox.setSelectedIndex(indexToSelect);
            checkIfEnableCifraButton();
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_destinatariComboBoxAncestorAdded

    private void destinatariComboBoxAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_destinatariComboBoxAncestorRemoved
        DefaultComboBoxModel<UserInfo> dlm = (DefaultComboBoxModel<UserInfo>) destinatariComboBox.getModel();
        dlm.removeAllElements();
        messaggioTemp = null;
        titoloNuovoMessaggioField.setText("");
        corpoNuovoMessaggio.setText("");
        nuovoMessaggioFeedback.setText("Componi il messaggio");
    }//GEN-LAST:event_destinatariComboBoxAncestorRemoved

    private void cifraButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cifraButtonActionPerformed
        try {
            UserInfo destinatario = (UserInfo) destinatariComboBox.getSelectedItem();
            messaggioTemp.setDestinatario(destinatario);
            messaggioTemp.setTitolo(titoloNuovoMessaggioField.getText());
            messaggioTemp.setLingua((String) linguaComboBox.getSelectedItem());
            messaggioTemp.setTesto(corpoNuovoMessaggio.getText());
            messaggioTemp.cifra();
            jTextArea6.setText(messaggioTemp.getTestoCifrato());
            nuovoMessaggioFeedback.setText("Continua a comporre, oppure invia");
            inviaButton.setEnabled(true);
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_cifraButtonActionPerformed

    private void inviaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inviaButtonActionPerformed
        try {
            if (commController.send(messaggioTemp)) {
                nuovoMessaggioFeedback.setText("Messaggio Inviato! Componi un altro messaggio");
            } else {
                nuovoMessaggioFeedback.setText("Errore nell'invio del messaggio!");
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_inviaButtonActionPerformed

    private void salvaBozzaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvaBozzaButtonActionPerformed
        try {
            UserInfo destinatario = (UserInfo) destinatariComboBox.getSelectedItem();
            messaggioTemp.setDestinatario(destinatario);
            messaggioTemp.setTitolo(titoloNuovoMessaggioField.getText());
            messaggioTemp.setLingua((String) linguaComboBox.getSelectedItem());
            messaggioTemp.setTesto(corpoNuovoMessaggio.getText());
            if (messaggioTemp.save()) {
                nuovoMessaggioFeedback.setText("Bozza salvata!");
            } else {
                nuovoMessaggioFeedback.setText("Errore nel salvataggio della bozza!");
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_salvaBozzaButtonActionPerformed

    private void titoloNuovoMessaggioFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_titoloNuovoMessaggioFieldKeyTyped
        checkIfEnableCifraButton();
    }//GEN-LAST:event_titoloNuovoMessaggioFieldKeyTyped

    private void corpoNuovoMessaggioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_corpoNuovoMessaggioKeyTyped
        checkIfEnableCifraButton();
    }//GEN-LAST:event_corpoNuovoMessaggioKeyTyped

    private void destinatariComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_destinatariComboBoxActionPerformed
        checkIfEnableCifraButton();
    }//GEN-LAST:event_destinatariComboBoxActionPerformed

    private void linguaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_linguaComboBoxActionPerformed
        checkIfEnableCifraButton();
    }//GEN-LAST:event_linguaComboBoxActionPerformed

    private void checkIfEnableCifraButton() {
        if (!corpoNuovoMessaggio.getText().equals("") && !titoloNuovoMessaggioField.getText().equals("")
                && destinatariComboBox.getSelectedIndex() != -1 && linguaComboBox.getSelectedIndex() != -1) {
            cifraButton.setEnabled(true);
        } else {
            cifraButton.setEnabled(false);
        }
        inviaButton.setEnabled(false);
    }

    private Studente studente = null;
    private final CommunicationController commController = CommunicationController.getInstance();
    private Messaggio messaggioTemp = null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cifraButton;
    private javax.swing.JTextArea corpoNuovoMessaggio;
    private javax.swing.JButton decifraMessaggioRicevutoButton;
    private javax.swing.JComboBox destinatariComboBox;
    private javax.swing.JButton eliminaBozzaButton;
    private javax.swing.JButton eliminaInviatiButton;
    private javax.swing.JButton eliminaMessaggioRicevutoButton;
    private javax.swing.JButton inviaButton;
    private javax.swing.JButton jButton14;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea6;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JComboBox linguaComboBox;
    private javax.swing.JList messaggiBozzaList;
    private javax.swing.JPanel messaggiBozzePanel;
    private javax.swing.JPanel messaggiCreaPanel;
    private javax.swing.JList messaggiInviatiList;
    private javax.swing.JPanel messaggiInviatiPanel;
    private javax.swing.JList messaggiRicevutiList;
    private javax.swing.JPanel messaggiRicevutiPanel;
    private javax.swing.JLabel nuovoMessaggioFeedback;
    private javax.swing.JButton ricaricaRicevutiButton;
    private javax.swing.JButton rispondiButton;
    private javax.swing.JButton salvaBozzaButton;
    private javax.swing.JTextField titoloNuovoMessaggioField;
    // End of variables declaration//GEN-END:variables
}
