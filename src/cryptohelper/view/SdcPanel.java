/*
 * Copyright (C) 2014 glaxy
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package cryptohelper.view;

import cryptohelper.model.Mappatura;
import cryptohelper.model.SistemaCifratura;
import cryptohelper.model.Studente;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;

/**
 *
 * @author glaxy
 */
public class SdcPanel extends javax.swing.JPanel {

    /**
     * Creates new form sdcPanel
     *
     * @param st studente che ha fatto login
     */
    public SdcPanel(Studente st) {
        studente = st;
        initComponents();
        metodoCifraturaComboBox.setSelectedIndex(-1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sdcTabs = new javax.swing.JTabbedPane();
        elencoSdcPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        sdcList = new javax.swing.JList();
        jPanel14 = new javax.swing.JPanel();
        deleteSdcButton = new javax.swing.JButton();
        nuovoSdcPanel = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        salvaSdcButton = new javax.swing.JButton();
        provaSdcButton = new javax.swing.JButton();
        risultatoProvaField = new javax.swing.JTextField();
        testoProvaField = new javax.swing.JTextField();
        feedbackNuovoSdcLabel = new javax.swing.JLabel();
        chiaveCifraturaField = new javax.swing.JTextField();
        calcolaMappaturaButton = new javax.swing.JButton();
        metodoCifraturaComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        showMap = new javax.swing.JTextArea();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        elencoSdcPanel.setLayout(new java.awt.BorderLayout());

        sdcList.setModel(new javax.swing.DefaultListModel<SistemaCifratura>());
        sdcList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        sdcList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                sdcListValueChanged(evt);
            }
        });
        sdcList.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                sdcListAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                sdcListAncestorRemoved(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane2.setViewportView(sdcList);

        elencoSdcPanel.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        deleteSdcButton.setText("Elimina");
        deleteSdcButton.setEnabled(false);
        deleteSdcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSdcButtonActionPerformed(evt);
            }
        });
        jPanel14.add(deleteSdcButton);

        elencoSdcPanel.add(jPanel14, java.awt.BorderLayout.PAGE_END);

        sdcTabs.addTab("Elenco", elencoSdcPanel);

        nuovoSdcPanel.setLayout(new java.awt.GridBagLayout());

        salvaSdcButton.setText("Salva");
        salvaSdcButton.setEnabled(false);
        salvaSdcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvaSdcButtonActionPerformed(evt);
            }
        });

        provaSdcButton.setText("Prova");
        provaSdcButton.setEnabled(false);
        provaSdcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provaSdcButtonActionPerformed(evt);
            }
        });

        risultatoProvaField.setEditable(false);
        risultatoProvaField.setEnabled(false);

        testoProvaField.setEnabled(false);

        feedbackNuovoSdcLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        feedbackNuovoSdcLabel.setText("Scegli un metodo di cifratura");

        chiaveCifraturaField.setEnabled(false);
        chiaveCifraturaField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                chiaveCifraturaFieldKeyTyped(evt);
            }
        });

        calcolaMappaturaButton.setText("Calcola Mappatura");
        calcolaMappaturaButton.setEnabled(false);
        calcolaMappaturaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcolaMappaturaButtonActionPerformed(evt);
            }
        });

        metodoCifraturaComboBox.setModel(new javax.swing.DefaultComboBoxModel(ottieniMetodiDiCifratura()));
        metodoCifraturaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metodoCifraturaComboBoxActionPerformed(evt);
            }
        });

        showMap.setEditable(false);
        showMap.setColumns(20);
        showMap.setFont(new java.awt.Font("Liberation Mono", 0, 15)); // NOI18N
        showMap.setRows(2);
        showMap.setEnabled(false);
        jScrollPane1.setViewportView(showMap);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(risultatoProvaField)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(provaSdcButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(salvaSdcButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(metodoCifraturaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chiaveCifraturaField))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(feedbackNuovoSdcLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(testoProvaField)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(184, Short.MAX_VALUE)
                .addComponent(calcolaMappaturaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180))
            .addComponent(jScrollPane1)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addComponent(feedbackNuovoSdcLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(metodoCifraturaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chiaveCifraturaField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calcolaMappaturaButton)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(testoProvaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(risultatoProvaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salvaSdcButton)
                    .addComponent(provaSdcButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        nuovoSdcPanel.add(jPanel10, new java.awt.GridBagConstraints());

        sdcTabs.addTab("Crea Nuovo", nuovoSdcPanel);

        add(sdcTabs);
    }// </editor-fold>//GEN-END:initComponents

    private void sdcListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_sdcListValueChanged
        if (evt.getValueIsAdjusting() == false) {
            if (sdcList.getSelectedIndex() == -1) {
                deleteSdcButton.setEnabled(false);
            } else {
                deleteSdcButton.setEnabled(true);
            }
        }
    }//GEN-LAST:event_sdcListValueChanged

    private void sdcListAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_sdcListAncestorAdded
        DefaultListModel<SistemaCifratura> dlm = (DefaultListModel<SistemaCifratura>) sdcList.getModel();
        List<SistemaCifratura> listasdc = null;
        try {
            listasdc = SistemaCifratura.caricaSistemiCifratura(studente);
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (SistemaCifratura sdc : listasdc) {
            dlm.addElement(sdc);
        }
    }//GEN-LAST:event_sdcListAncestorAdded

    private void sdcListAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_sdcListAncestorRemoved
        DefaultListModel<SistemaCifratura> dlm = (DefaultListModel<SistemaCifratura>) sdcList.getModel();
        dlm.clear();
    }//GEN-LAST:event_sdcListAncestorRemoved

    private void deleteSdcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSdcButtonActionPerformed
        try {
            SistemaCifratura sdc = (SistemaCifratura) sdcList.getSelectedValue();
            if (sdc.elimina()) {
                DefaultListModel<SistemaCifratura> dlm = (DefaultListModel<SistemaCifratura>) sdcList.getModel();
                dlm.removeElement(sdc);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteSdcButtonActionPerformed

    private void salvaSdcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvaSdcButtonActionPerformed
        try {
            nuovoSdc.save();
            nuovoSdc = null;
            setSdcWidgetEnabled(false);
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_salvaSdcButtonActionPerformed

    private void provaSdcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_provaSdcButtonActionPerformed
        risultatoProvaField.setText(nuovoSdc.prova(testoProvaField.getText()));
    }//GEN-LAST:event_provaSdcButtonActionPerformed

    private void chiaveCifraturaFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chiaveCifraturaFieldKeyTyped
        setSdcWidgetEnabled(false);
    }//GEN-LAST:event_chiaveCifraturaFieldKeyTyped

    private void calcolaMappaturaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcolaMappaturaButtonActionPerformed
        String metodo = (String) metodoCifraturaComboBox.getSelectedItem();
        String chiave = chiaveCifraturaField.getText();
        try {
            if (nuovoSdc == null) {
                nuovoSdc = new SistemaCifratura(chiave, metodo, studente);
            } else {
                nuovoSdc.setChiave(chiave);
                nuovoSdc.setMetodo(metodo);
                nuovoSdc.calcolaMappatura();
            }
            Mappatura map = nuovoSdc.getMappatura();
            showMap.setText(map.toString());
            setSdcWidgetEnabled(true);
        } catch (IllegalArgumentException ex) {
            feedbackNuovoSdcLabel.setText(ex.getMessage());
        }
    }//GEN-LAST:event_calcolaMappaturaButtonActionPerformed

    private void metodoCifraturaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metodoCifraturaComboBoxActionPerformed
        JComboBox cb = (JComboBox) evt.getSource();
        String metodo = (String) cb.getSelectedItem();
        if (metodo != null) {
            chiaveCifraturaField.setEnabled(true);
            calcolaMappaturaButton.setEnabled(true);
            feedbackNuovoSdcLabel.setText(mostraSceltaChiave(metodo));
            setSdcWidgetEnabled(false);
        }
    }//GEN-LAST:event_metodoCifraturaComboBoxActionPerformed

    private void setSdcWidgetEnabled(boolean b) {
        provaSdcButton.setEnabled(b);
        salvaSdcButton.setEnabled(b);
        testoProvaField.setEnabled(b);
        risultatoProvaField.setEnabled(b);
    }

    private String[] ottieniMetodiDiCifratura() {
        return new String[]{"parolachiave", "pseudocasuale", "cesare"};
    }

    private String mostraSceltaChiave(String metodo) {
        String vincolo = "";
        switch (metodo) {
            case "parolachiave":
                vincolo = "inserisci una parola (solo lettere latine)";
                break;
            case "cesare":
                vincolo = "inserisci un numero da 1 a 25";
                break;
            case "pseudocasuale":
                vincolo = "inserisci un numero";
                break;
        }
        return vincolo;
    }

    private Studente studente = null;
    private SistemaCifratura nuovoSdc = null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton calcolaMappaturaButton;
    private javax.swing.JTextField chiaveCifraturaField;
    private javax.swing.JButton deleteSdcButton;
    private javax.swing.JPanel elencoSdcPanel;
    private javax.swing.JLabel feedbackNuovoSdcLabel;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox metodoCifraturaComboBox;
    private javax.swing.JPanel nuovoSdcPanel;
    private javax.swing.JButton provaSdcButton;
    private javax.swing.JTextField risultatoProvaField;
    private javax.swing.JButton salvaSdcButton;
    private javax.swing.JList sdcList;
    private javax.swing.JTabbedPane sdcTabs;
    private javax.swing.JTextArea showMap;
    private javax.swing.JTextField testoProvaField;
    // End of variables declaration//GEN-END:variables
}
