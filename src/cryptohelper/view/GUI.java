/*
 * Copyright (C) 2014 glaxy
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package cryptohelper.view;

import cryptohelper.controller.DBController;
import cryptohelper.controller.GUIController;
import cryptohelper.model.Mappatura;
import cryptohelper.model.Messaggio;
import cryptohelper.model.MessaggioDestinatario;
import cryptohelper.model.MessaggioMittente;
import cryptohelper.model.Proposta;
import cryptohelper.model.SistemaCifratura;
import cryptohelper.model.Studente;
import cryptohelper.model.UserInfo;
import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.awt.event.ItemListener;
import static java.lang.Thread.sleep;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;

/**
 *
 * @author glaxy
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        //getRootPane().setDefaultButton(loginButton);
        metodoCifraturaComboBox.setSelectedIndex(-1);
        jComboBox2.setSelectedIndex(-1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jProgressBar1 = new javax.swing.JProgressBar();
        jComboBox1 = new javax.swing.JComboBox();
        loginPanel = new javax.swing.JPanel();
        loginToolBar = new javax.swing.JToolBar();
        goToRegistrationButton = new javax.swing.JButton();
        loginFormPanel = new javax.swing.JPanel();
        nickLoginField = new javax.swing.JTextField();
        passLoginField = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        errorLoginLabel = new javax.swing.JLabel();
        registrationPanel = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        personalPanel = new javax.swing.JPanel();
        communicationPanel = new javax.swing.JPanel();
        comunicationTabs = new javax.swing.JTabbedPane();
        messagePanel = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        messaggiRicevutiPanel = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        messaggiRicevutiList = new javax.swing.JList();
        jToolBar1 = new javax.swing.JToolBar();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        messaggiInviatiPanel = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        messaggiInviatiList = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jButton12 = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        messaggiBozzePanel = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        messaggiBozzaList = new javax.swing.JList();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jPanel16 = new javax.swing.JPanel();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        messaggiCreaPanel = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel23 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jPanel24 = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        jTextArea6 = new javax.swing.JTextArea();
        propostePanel = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        rifiutaPropostaButton = new javax.swing.JButton();
        accettaPropostaButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        proposteRicevuteValutareList = new javax.swing.JList();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        proposteInviateValutateList = new javax.swing.JList();
        jPanel7 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        inviaPropostaButton = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        sdcNonPropostiList = new javax.swing.JList();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        compagniList = new javax.swing.JList();
        sdcPanel = new javax.swing.JPanel();
        sdcTabs = new javax.swing.JTabbedPane();
        elencoSdcPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        sdcList = new javax.swing.JList();
        jPanel14 = new javax.swing.JPanel();
        deleteSdcButton = new javax.swing.JButton();
        nuovoSdcPanel = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        salvaSdcButton = new javax.swing.JButton();
        provaSdcButton = new javax.swing.JButton();
        risultatoProvaField = new javax.swing.JTextField();
        testoProvaField = new javax.swing.JTextField();
        feedbackNuovoSdcLabel = new javax.swing.JLabel();
        chiaveCifraturaField = new javax.swing.JTextField();
        calcolaMappaturaButton = new javax.swing.JButton();
        metodoCifraturaComboBox = new javax.swing.JComboBox();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CryptoHelper");
        getContentPane().setLayout(new java.awt.CardLayout());

        loginPanel.setLayout(new java.awt.BorderLayout());

        loginToolBar.setFloatable(false);
        loginToolBar.setRollover(true);

        goToRegistrationButton.setText("Registrazione");
        goToRegistrationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goToRegistrationButtonActionPerformed(evt);
            }
        });
        loginToolBar.add(goToRegistrationButton);

        loginPanel.add(loginToolBar, java.awt.BorderLayout.PAGE_START);

        loginFormPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 150;
        loginFormPanel.add(nickLoginField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 150;
        loginFormPanel.add(passLoginField, gridBagConstraints);

        loginButton.setText("Login");
        loginButton.setFocusTraversalPolicyProvider(true);
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 150;
        loginFormPanel.add(loginButton, gridBagConstraints);

        errorLoginLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        loginFormPanel.add(errorLoginLabel, gridBagConstraints);

        loginPanel.add(loginFormPanel, java.awt.BorderLayout.CENTER);

        getContentPane().add(loginPanel, "card6");

        registrationPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 150;
        registrationPanel.add(jTextField1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 150;
        registrationPanel.add(jTextField2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 150;
        registrationPanel.add(jTextField3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.ipadx = 150;
        registrationPanel.add(jPasswordField1, gridBagConstraints);

        jLabel1.setText("Nome");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        registrationPanel.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Cognome");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        registrationPanel.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Nickname");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        registrationPanel.add(jLabel3, gridBagConstraints);

        jLabel4.setText("Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        registrationPanel.add(jLabel4, gridBagConstraints);

        jButton2.setText("Registrami!");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        registrationPanel.add(jButton2, gridBagConstraints);

        getContentPane().add(registrationPanel, "card4");

        personalPanel.setLayout(new java.awt.BorderLayout());
        getContentPane().add(personalPanel, "card5");

        communicationPanel.setLayout(new javax.swing.BoxLayout(communicationPanel, javax.swing.BoxLayout.LINE_AXIS));

        comunicationTabs.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        messagePanel.setLayout(new javax.swing.BoxLayout(messagePanel, javax.swing.BoxLayout.LINE_AXIS));

        messaggiRicevutiPanel.setLayout(new javax.swing.BoxLayout(messaggiRicevutiPanel, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel17.setLayout(new java.awt.BorderLayout());

        messaggiRicevutiList.setModel(new javax.swing.DefaultListModel<MessaggioDestinatario>());
        messaggiRicevutiList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        messaggiRicevutiList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                messaggiRicevutiListValueChanged(evt);
            }
        });
        messaggiRicevutiList.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                messaggiRicevutiListAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                messaggiRicevutiListAncestorRemoved(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane6.setViewportView(messaggiRicevutiList);

        jPanel17.add(jScrollPane6, java.awt.BorderLayout.CENTER);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton3.setText("Ricarica");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jPanel17.add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        messaggiRicevutiPanel.add(jPanel17);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane9.setViewportView(jTextArea1);

        jPanel2.add(jScrollPane9, java.awt.BorderLayout.CENTER);

        jButton10.setText("Elimina");
        jButton10.setEnabled(false);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton10);

        jButton4.setText("Rispondi");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);

        jButton5.setText("Decifra");
        jButton5.setEnabled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);

        jPanel2.add(jPanel1, java.awt.BorderLayout.PAGE_END);

        messaggiRicevutiPanel.add(jPanel2);

        jTabbedPane2.addTab("Ricevuti", messaggiRicevutiPanel);

        messaggiInviatiPanel.setLayout(new javax.swing.BoxLayout(messaggiInviatiPanel, javax.swing.BoxLayout.PAGE_AXIS));

        messaggiInviatiList.setModel(new javax.swing.DefaultListModel<MessaggioMittente>());
        messaggiInviatiList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        messaggiInviatiList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                messaggiInviatiListValueChanged(evt);
            }
        });
        messaggiInviatiList.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                messaggiInviatiListAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                messaggiInviatiListAncestorRemoved(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane11.setViewportView(messaggiInviatiList);

        messaggiInviatiPanel.add(jScrollPane11);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jButton12.setText("Elimina");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton12);

        jPanel3.add(jPanel8, java.awt.BorderLayout.PAGE_END);

        jTextArea2.setColumns(20);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jScrollPane10.setViewportView(jTextArea2);

        jPanel3.add(jScrollPane10, java.awt.BorderLayout.CENTER);

        messaggiInviatiPanel.add(jPanel3);

        jTabbedPane2.addTab("Inviati", messaggiInviatiPanel);

        messaggiBozzePanel.setLayout(new javax.swing.BoxLayout(messaggiBozzePanel, javax.swing.BoxLayout.PAGE_AXIS));

        messaggiBozzaList.setModel(new javax.swing.DefaultListModel<MessaggioMittente>());
        messaggiBozzaList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        messaggiBozzaList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                messaggiBozzaListValueChanged(evt);
            }
        });
        messaggiBozzaList.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                messaggiBozzaListAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                messaggiBozzaListAncestorRemoved(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane12.setViewportView(messaggiBozzaList);

        messaggiBozzePanel.add(jScrollPane12);

        jPanel15.setLayout(new java.awt.BorderLayout());

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane13.setViewportView(jTextArea3);

        jPanel15.add(jScrollPane13, java.awt.BorderLayout.CENTER);

        jButton14.setText("Componi");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel16.add(jButton14);

        jButton15.setText("Elimina");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel16.add(jButton15);

        jPanel15.add(jPanel16, java.awt.BorderLayout.PAGE_END);

        messaggiBozzePanel.add(jPanel15);

        jTabbedPane2.addTab("Bozze", messaggiBozzePanel);

        messaggiCreaPanel.setLayout(new javax.swing.BoxLayout(messaggiCreaPanel, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel19.setLayout(new java.awt.GridBagLayout());

        jTextField4.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 226;
        jPanel19.add(jTextField4, gridBagConstraints);

        jLabel7.setText("Destinatario:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel19.add(jLabel7, gridBagConstraints);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<UserInfo>());
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jComboBox2.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jComboBox2AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                jComboBox2AncestorRemoved(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 216;
        jPanel19.add(jComboBox2, gridBagConstraints);

        jLabel8.setText("Titolo:");
        jLabel8.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel19.add(jLabel8, gridBagConstraints);

        jLabel9.setText("Scegli un destinatario");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        jPanel19.add(jLabel9, gridBagConstraints);

        messaggiCreaPanel.add(jPanel19);

        jPanel18.setLayout(new java.awt.BorderLayout());

        jPanel22.setLayout(new javax.swing.BoxLayout(jPanel22, javax.swing.BoxLayout.PAGE_AXIS));
        jPanel18.add(jPanel22, java.awt.BorderLayout.PAGE_START);

        jButton8.setText("Cifra");
        jButton8.setEnabled(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel21.add(jButton8);

        jButton7.setText("Invia");
        jButton7.setEnabled(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel21.add(jButton7);

        jButton1.setText("Salva come Bozza");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel21.add(jButton1);

        jPanel18.add(jPanel21, java.awt.BorderLayout.PAGE_END);

        jPanel23.setLayout(new javax.swing.BoxLayout(jPanel23, javax.swing.BoxLayout.LINE_AXIS));

        jPanel25.setLayout(new java.awt.BorderLayout());

        jTextArea5.setColumns(20);
        jTextArea5.setRows(5);
        jTextArea5.setEnabled(false);
        jScrollPane8.setViewportView(jTextArea5);

        jPanel25.add(jScrollPane8, java.awt.BorderLayout.CENTER);

        jPanel23.add(jPanel25);

        jPanel24.setLayout(new java.awt.BorderLayout());

        jTextArea6.setEditable(false);
        jTextArea6.setColumns(20);
        jTextArea6.setLineWrap(true);
        jTextArea6.setRows(5);
        jTextArea6.setEnabled(false);
        jScrollPane14.setViewportView(jTextArea6);

        jPanel24.add(jScrollPane14, java.awt.BorderLayout.CENTER);

        jPanel23.add(jPanel24);

        jPanel18.add(jPanel23, java.awt.BorderLayout.CENTER);

        messaggiCreaPanel.add(jPanel18);

        jTabbedPane2.addTab("Crea Nuovo", messaggiCreaPanel);

        messagePanel.add(jTabbedPane2);

        comunicationTabs.addTab("Messaggi", messagePanel);

        propostePanel.setLayout(new javax.swing.BoxLayout(propostePanel, javax.swing.BoxLayout.LINE_AXIS));

        jPanel6.setLayout(new java.awt.BorderLayout());

        rifiutaPropostaButton.setText("Rifiuta");
        rifiutaPropostaButton.setEnabled(false);
        rifiutaPropostaButton.setFocusable(false);
        rifiutaPropostaButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        rifiutaPropostaButton.setPreferredSize(new java.awt.Dimension(65, 33));
        rifiutaPropostaButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        rifiutaPropostaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rifiutaPropostaButtonActionPerformed(evt);
            }
        });
        jPanel13.add(rifiutaPropostaButton);

        accettaPropostaButton.setText("Accetta");
        accettaPropostaButton.setEnabled(false);
        accettaPropostaButton.setFocusable(false);
        accettaPropostaButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        accettaPropostaButton.setPreferredSize(new java.awt.Dimension(65, 33));
        accettaPropostaButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        accettaPropostaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accettaPropostaButtonActionPerformed(evt);
            }
        });
        jPanel13.add(accettaPropostaButton);

        jPanel6.add(jPanel13, java.awt.BorderLayout.PAGE_END);

        proposteRicevuteValutareList.setModel(new javax.swing.DefaultListModel<Proposta>());
        proposteRicevuteValutareList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        proposteRicevuteValutareList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                proposteRicevuteValutareListValueChanged(evt);
            }
        });
        proposteRicevuteValutareList.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                proposteRicevuteValutareListAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                proposteRicevuteValutareListAncestorRemoved(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(proposteRicevuteValutareList);

        jPanel6.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Ricevute da valutare", jPanel6);

        jPanel9.setLayout(new javax.swing.BoxLayout(jPanel9, javax.swing.BoxLayout.LINE_AXIS));

        proposteInviateValutateList.setModel(new javax.swing.DefaultListModel<Proposta>());
        proposteInviateValutateList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        proposteInviateValutateList.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                proposteInviateValutateListAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                proposteInviateValutateListAncestorRemoved(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane4.setViewportView(proposteInviateValutateList);

        jPanel9.add(jScrollPane4);

        jTabbedPane1.addTab("Inviate e valutate", jPanel9);

        jPanel7.setLayout(new java.awt.BorderLayout());

        inviaPropostaButton.setText("Invia Proposta");
        inviaPropostaButton.setEnabled(false);
        inviaPropostaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inviaPropostaButtonActionPerformed(evt);
            }
        });
        jPanel4.add(inviaPropostaButton);

        jPanel7.add(jPanel4, java.awt.BorderLayout.PAGE_END);

        jPanel12.setLayout(new javax.swing.BoxLayout(jPanel12, javax.swing.BoxLayout.LINE_AXIS));

        jPanel11.setLayout(new javax.swing.BoxLayout(jPanel11, javax.swing.BoxLayout.PAGE_AXIS));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Sistemi di cifratura");
        jPanel11.add(jLabel6);

        sdcNonPropostiList.setModel(new javax.swing.DefaultListModel<SistemaCifratura>());
        sdcNonPropostiList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                sdcNonPropostiListValueChanged(evt);
            }
        });
        sdcNonPropostiList.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                sdcNonPropostiListAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                sdcNonPropostiListAncestorRemoved(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane3.setViewportView(sdcNonPropostiList);

        jPanel11.add(jScrollPane3);

        jPanel12.add(jPanel11);

        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.PAGE_AXIS));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Studenti");
        jPanel5.add(jLabel5);

        compagniList.setModel(new javax.swing.DefaultListModel<Studente>());
        compagniList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                compagniListValueChanged(evt);
            }
        });
        compagniList.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                compagniListAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                compagniListAncestorRemoved(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane5.setViewportView(compagniList);

        jPanel5.add(jScrollPane5);

        jPanel12.add(jPanel5);

        jPanel7.add(jPanel12, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Crea Nuova", jPanel7);

        propostePanel.add(jTabbedPane1);

        comunicationTabs.addTab("Proposte", propostePanel);

        sdcPanel.setLayout(new javax.swing.BoxLayout(sdcPanel, javax.swing.BoxLayout.LINE_AXIS));

        elencoSdcPanel.setLayout(new java.awt.BorderLayout());

        sdcList.setModel(new javax.swing.DefaultListModel<SistemaCifratura>());
        sdcList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        sdcList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                sdcListValueChanged(evt);
            }
        });
        sdcList.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                sdcListAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                sdcListAncestorRemoved(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane2.setViewportView(sdcList);

        elencoSdcPanel.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        deleteSdcButton.setText("Elimina");
        deleteSdcButton.setEnabled(false);
        deleteSdcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSdcButtonActionPerformed(evt);
            }
        });
        jPanel14.add(deleteSdcButton);

        elencoSdcPanel.add(jPanel14, java.awt.BorderLayout.PAGE_END);

        sdcTabs.addTab("Elenco", elencoSdcPanel);

        nuovoSdcPanel.setLayout(new java.awt.GridBagLayout());

        salvaSdcButton.setText("Salva");
        salvaSdcButton.setEnabled(false);
        salvaSdcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvaSdcButtonActionPerformed(evt);
            }
        });

        provaSdcButton.setText("Prova");
        provaSdcButton.setEnabled(false);
        provaSdcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provaSdcButtonActionPerformed(evt);
            }
        });

        risultatoProvaField.setEditable(false);
        risultatoProvaField.setEnabled(false);

        testoProvaField.setEnabled(false);

        feedbackNuovoSdcLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        feedbackNuovoSdcLabel.setText("Scegli un metodo di cifratura");

        chiaveCifraturaField.setEnabled(false);
        chiaveCifraturaField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                chiaveCifraturaFieldKeyTyped(evt);
            }
        });

        calcolaMappaturaButton.setText("Calcola Mappatura");
        calcolaMappaturaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcolaMappaturaButtonActionPerformed(evt);
            }
        });

        metodoCifraturaComboBox.setModel(new javax.swing.DefaultComboBoxModel(guiController.ottieniMetodiDiCifratura()));
        metodoCifraturaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metodoCifraturaComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(risultatoProvaField)
            .addComponent(testoProvaField)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(provaSdcButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(salvaSdcButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(metodoCifraturaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chiaveCifraturaField))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(feedbackNuovoSdcLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(184, Short.MAX_VALUE)
                .addComponent(calcolaMappaturaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addComponent(feedbackNuovoSdcLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(metodoCifraturaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chiaveCifraturaField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calcolaMappaturaButton)
                .addGap(99, 99, 99)
                .addComponent(testoProvaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(risultatoProvaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salvaSdcButton)
                    .addComponent(provaSdcButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        nuovoSdcPanel.add(jPanel10, new java.awt.GridBagConstraints());

        sdcTabs.addTab("Crea Nuovo", nuovoSdcPanel);

        sdcPanel.add(sdcTabs);

        comunicationTabs.addTab("Sistemi Cifratura", sdcPanel);

        communicationPanel.add(comunicationTabs);

        getContentPane().add(communicationPanel, "card6");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        try {
            if (guiController.login(nickLoginField.getText(), String.valueOf(passLoginField.getPassword()))) {
                CardLayout cl = (CardLayout) getContentPane().getLayout();
                cl.show(getContentPane(), "card6");
            } else {
                errorLoginLabel.setText("nickname o password errati");
            }
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    private void goToRegistrationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goToRegistrationButtonActionPerformed
        CardLayout cl = (CardLayout) getContentPane().getLayout();
        cl.show(getContentPane(), "card4");
    }//GEN-LAST:event_goToRegistrationButtonActionPerformed

    private void metodoCifraturaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metodoCifraturaComboBoxActionPerformed
        JComboBox cb = (JComboBox) evt.getSource();
        String metodo = (String) cb.getSelectedItem();
        if (metodo != null) {
            chiaveCifraturaField.setEnabled(true);
            feedbackNuovoSdcLabel.setText(guiController.mostraSceltaChiave(metodo));
            setSdcWidgetEnabled(false);
        }
    }//GEN-LAST:event_metodoCifraturaComboBoxActionPerformed

    private void calcolaMappaturaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcolaMappaturaButtonActionPerformed
        String metodo = (String) metodoCifraturaComboBox.getSelectedItem();
        try {
            Mappatura map = guiController.generaMappatura(chiaveCifraturaField.getText(), metodo);
            /* bisogna pensare a come far visualizzare la mappatura */
            System.out.println(map);
            setSdcWidgetEnabled(true);
        } catch (IllegalArgumentException ex) {
            feedbackNuovoSdcLabel.setText(ex.getMessage());
        }
    }//GEN-LAST:event_calcolaMappaturaButtonActionPerformed

    private void chiaveCifraturaFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chiaveCifraturaFieldKeyTyped
        setSdcWidgetEnabled(false);
    }//GEN-LAST:event_chiaveCifraturaFieldKeyTyped

    private void provaSdcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_provaSdcButtonActionPerformed
        risultatoProvaField.setText(guiController.cifra(testoProvaField.getText()));
    }//GEN-LAST:event_provaSdcButtonActionPerformed

    private void salvaSdcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvaSdcButtonActionPerformed
        try {
            guiController.salvaSistemaCifratura();
            setSdcWidgetEnabled(false);
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_salvaSdcButtonActionPerformed

    private void deleteSdcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSdcButtonActionPerformed
        try {
            SistemaCifratura sdc = (SistemaCifratura) sdcList.getSelectedValue();
            if (guiController.eliminaSistemaCifratura(sdc)) {
                DefaultListModel<SistemaCifratura> dlm = (DefaultListModel<SistemaCifratura>) sdcList.getModel();
                dlm.removeElement(sdc);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteSdcButtonActionPerformed

    private void sdcListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_sdcListValueChanged
        if (evt.getValueIsAdjusting() == false) {
            if (sdcList.getSelectedIndex() == -1) {
                deleteSdcButton.setEnabled(false);
            } else {
                deleteSdcButton.setEnabled(true);
            }
        }
    }//GEN-LAST:event_sdcListValueChanged

    private void proposteInviateValutateListAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_proposteInviateValutateListAncestorAdded
        DefaultListModel<Proposta> dlm = (DefaultListModel<Proposta>) proposteInviateValutateList.getModel();
        List<Proposta> listaProposteValutate = null;
        try {
            listaProposteValutate = guiController.vediNotificheAccettazioneProposte();
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Proposta p : listaProposteValutate) {
            dlm.addElement(p);
        }
    }//GEN-LAST:event_proposteInviateValutateListAncestorAdded

    private void proposteRicevuteValutareListAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_proposteRicevuteValutareListAncestorAdded
        DefaultListModel<Proposta> dlm = (DefaultListModel<Proposta>) proposteRicevuteValutareList.getModel();
        List<Proposta> listaProposte = null;
        try {
            listaProposte = guiController.vediProposteSistemaCifratura();
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Proposta p : listaProposte) {
            dlm.addElement(p);
        }
    }//GEN-LAST:event_proposteRicevuteValutareListAncestorAdded

    private void proposteRicevuteValutareListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_proposteRicevuteValutareListValueChanged
        if (evt.getValueIsAdjusting() == false) {
            if (proposteRicevuteValutareList.getSelectedIndex() == -1) {
                accettaPropostaButton.setEnabled(false);
                rifiutaPropostaButton.setEnabled(false);
            } else {
                accettaPropostaButton.setEnabled(true);
                rifiutaPropostaButton.setEnabled(true);
            }
        }
    }//GEN-LAST:event_proposteRicevuteValutareListValueChanged

    private void accettaPropostaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accettaPropostaButtonActionPerformed
        try {
            Proposta proposta = (Proposta) proposteRicevuteValutareList.getSelectedValue();
            if (guiController.comunicaDecisione(proposta, "accepted")) {
                DefaultListModel<Proposta> dlm = (DefaultListModel<Proposta>) proposteRicevuteValutareList.getModel();
                dlm.removeElement(proposta);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_accettaPropostaButtonActionPerformed

    private void rifiutaPropostaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rifiutaPropostaButtonActionPerformed
        try {
            Proposta proposta = (Proposta) proposteRicevuteValutareList.getSelectedValue();
            if (guiController.comunicaDecisione(proposta, "refused")) {
                DefaultListModel<Proposta> dlm = (DefaultListModel<Proposta>) proposteRicevuteValutareList.getModel();
                dlm.removeElement(proposta);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_rifiutaPropostaButtonActionPerformed

    private void proposteInviateValutateListAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_proposteInviateValutateListAncestorRemoved
        DefaultListModel<Proposta> dlm = (DefaultListModel<Proposta>) proposteInviateValutateList.getModel();
        dlm.clear();
    }//GEN-LAST:event_proposteInviateValutateListAncestorRemoved

    private void proposteRicevuteValutareListAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_proposteRicevuteValutareListAncestorRemoved
        DefaultListModel<Proposta> dlm = (DefaultListModel<Proposta>) proposteRicevuteValutareList.getModel();
        dlm.clear();
    }//GEN-LAST:event_proposteRicevuteValutareListAncestorRemoved

    private void sdcListAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_sdcListAncestorAdded
        DefaultListModel<SistemaCifratura> dlm = (DefaultListModel<SistemaCifratura>) sdcList.getModel();
        List<SistemaCifratura> listasdc = null;
        try {
            listasdc = guiController.elencaSistemiCifratura();
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (SistemaCifratura sdc : listasdc) {
            dlm.addElement(sdc);
        }
    }//GEN-LAST:event_sdcListAncestorAdded

    private void sdcListAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_sdcListAncestorRemoved
        DefaultListModel<SistemaCifratura> dlm = (DefaultListModel<SistemaCifratura>) sdcList.getModel();
        dlm.clear();
    }//GEN-LAST:event_sdcListAncestorRemoved

    private void messaggiRicevutiListAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_messaggiRicevutiListAncestorAdded
        DefaultListModel<MessaggioDestinatario> dlm = (DefaultListModel<MessaggioDestinatario>) messaggiRicevutiList.getModel();
        List<MessaggioDestinatario> listaMessaggiRicevuti = null;
        try {
            listaMessaggiRicevuti = guiController.elencaMessaggiRicevuti();
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (MessaggioDestinatario m : listaMessaggiRicevuti) {
            dlm.addElement(m);
        }
    }//GEN-LAST:event_messaggiRicevutiListAncestorAdded

    private void messaggiRicevutiListAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_messaggiRicevutiListAncestorRemoved
        DefaultListModel<MessaggioDestinatario> dlm = (DefaultListModel<MessaggioDestinatario>) messaggiRicevutiList.getModel();
        dlm.clear();
    }//GEN-LAST:event_messaggiRicevutiListAncestorRemoved

    private void messaggiInviatiListAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_messaggiInviatiListAncestorAdded
        DefaultListModel<MessaggioMittente> dlm = (DefaultListModel<MessaggioMittente>) messaggiInviatiList.getModel();
        List<MessaggioMittente> listaMessaggiInviati = null;
        try {
            listaMessaggiInviati = guiController.elencaMessaggiInviati();
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (MessaggioMittente m : listaMessaggiInviati) {
            dlm.addElement(m);
        }
    }//GEN-LAST:event_messaggiInviatiListAncestorAdded

    private void messaggiInviatiListAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_messaggiInviatiListAncestorRemoved
        DefaultListModel<MessaggioMittente> dlm = (DefaultListModel<MessaggioMittente>) messaggiInviatiList.getModel();
        dlm.clear();
    }//GEN-LAST:event_messaggiInviatiListAncestorRemoved

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        try {
            Messaggio daCancellare = (Messaggio) messaggiRicevutiList.getSelectedValue();
            boolean b = guiController.eliminaMessaggioRicevuto(daCancellare);
            if (b == true) {
                DefaultListModel<MessaggioDestinatario> dlm = (DefaultListModel<MessaggioDestinatario>) messaggiRicevutiList.getModel();
                dlm.removeElement(daCancellare);
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void messaggiRicevutiListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_messaggiRicevutiListValueChanged
        if (evt.getValueIsAdjusting() == false) {
            if (messaggiRicevutiList.getSelectedIndex() == -1) {
                jTextArea1.setText("");
                jButton10.setEnabled(false);
                jButton4.setEnabled(false);
                jButton5.setEnabled(false);
            } else {
                MessaggioDestinatario md = (MessaggioDestinatario) messaggiRicevutiList.getSelectedValue();
                jTextArea1.setText(md.getTestoCifrato());
                jButton10.setEnabled(true);
                jButton4.setEnabled(true);
                jButton5.setEnabled(true);
            }
        }
    }//GEN-LAST:event_messaggiRicevutiListValueChanged

    private void sdcNonPropostiListAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_sdcNonPropostiListAncestorAdded
        DefaultListModel<SistemaCifratura> dlm = (DefaultListModel<SistemaCifratura>) sdcNonPropostiList.getModel();
        List<SistemaCifratura> listasdc = null;
        try {
            listasdc = guiController.elencaSistemiCifraturaNonProposti();
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (SistemaCifratura sdc : listasdc) {
            dlm.addElement(sdc);
        }
    }//GEN-LAST:event_sdcNonPropostiListAncestorAdded

    private void sdcNonPropostiListAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_sdcNonPropostiListAncestorRemoved
        DefaultListModel<SistemaCifratura> dlm = (DefaultListModel<SistemaCifratura>) sdcNonPropostiList.getModel();
        dlm.clear();
    }//GEN-LAST:event_sdcNonPropostiListAncestorRemoved

    private void compagniListAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_compagniListAncestorAdded
        DefaultListModel<Studente> dlm = (DefaultListModel<Studente>) compagniList.getModel();
        List<Studente> listaCompagni = null;
        try {
            listaCompagni = guiController.elencaCompagni();
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Studente st : listaCompagni) {
            dlm.addElement(st);
        }
    }//GEN-LAST:event_compagniListAncestorAdded

    private void compagniListAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_compagniListAncestorRemoved
        DefaultListModel<SistemaCifratura> dlm = (DefaultListModel<SistemaCifratura>) compagniList.getModel();
        dlm.clear();
    }//GEN-LAST:event_compagniListAncestorRemoved

    private void sdcNonPropostiListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_sdcNonPropostiListValueChanged
        if (evt.getValueIsAdjusting() == false) {
            if (sdcNonPropostiList.getSelectedIndex() == -1 || compagniList.getSelectedIndex() == -1) {
                inviaPropostaButton.setEnabled(false);
            } else {
                inviaPropostaButton.setEnabled(true);
            }
        }
    }//GEN-LAST:event_sdcNonPropostiListValueChanged

    private void compagniListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_compagniListValueChanged
        if (evt.getValueIsAdjusting() == false) {
            if (sdcNonPropostiList.getSelectedIndex() == -1 || compagniList.getSelectedIndex() == -1) {
                inviaPropostaButton.setEnabled(false);
            } else {
                inviaPropostaButton.setEnabled(true);
            }
        }
    }//GEN-LAST:event_compagniListValueChanged

    private void inviaPropostaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inviaPropostaButtonActionPerformed
        SistemaCifratura sdc = (SistemaCifratura) sdcNonPropostiList.getSelectedValue();
        Studente st = (Studente) compagniList.getSelectedValue();
        try {
            if (guiController.proponiSistemaCifratura(sdc, st)) {
                DefaultListModel<Studente> dlmElencoStudenti = (DefaultListModel<Studente>) compagniList.getModel();
                DefaultListModel<SistemaCifratura> dlmElencoSdcNonProposti = (DefaultListModel<SistemaCifratura>) sdcNonPropostiList.getModel();
                dlmElencoSdcNonProposti.removeElement(sdc);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_inviaPropostaButtonActionPerformed

    private void jComboBox2AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jComboBox2AncestorAdded
        DefaultComboBoxModel<UserInfo> dlm = (DefaultComboBoxModel<UserInfo>) jComboBox2.getModel();
        List<UserInfo> listaDestinatari = null;
        try {
            listaDestinatari = guiController.elencaDestinatari();
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        ActionListener[] myListeners = jComboBox2.getActionListeners();
        jComboBox2.removeActionListener(myListeners[0]);
        for (UserInfo ui : listaDestinatari) {
            dlm.addElement(ui);
        }
        if (idDestinatario != -1) {
            for (int i = 0; i < jComboBox2.getItemCount(); i++) {
                if (((UserInfo) jComboBox2.getItemAt(i)).getId() == idDestinatario) {
                    jComboBox2.setSelectedIndex(i);
                    jComboBox2ActionPerformed(null);
                    if (titoloBozza != null) {
                        jTextField4.setText(titoloBozza);
                        titoloBozza = null;
                    }
                    if (testoBozza != null) {
                        System.out.println("ciaoo");
                        jTextArea5.setText(testoBozza);
                        testoBozza = null;
                    }
                    idDestinatario = -1;
                }
            }
        } else {
            jComboBox2.setSelectedIndex(-1);
        }
        jComboBox2.addActionListener(myListeners[0]);
    }//GEN-LAST:event_jComboBox2AncestorAdded

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        UserInfo destinatario = (UserInfo) jComboBox2.getSelectedItem();
        if (destinatario != null) {
            String daCifrare = jTextArea6.getText();
            messaggio = guiController.creaMessaggio();
            messaggio.setDestinatario(destinatario);
            jLabel9.setText("Componi il messaggio e cifralo");
            jLabel8.setEnabled(true);
            jTextField4.setEnabled(true);
            jTextArea5.setEnabled(true);
            jTextArea6.setEnabled(true);
            jButton8.setEnabled(true);
            jButton1.setEnabled(true);
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox2AncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jComboBox2AncestorRemoved
        //salvaBozza(); //TODO
        setMessaggioEnabled(false);
        jLabel9.setText("Scegli un destinatario");
        DefaultComboBoxModel<UserInfo> dlm = (DefaultComboBoxModel<UserInfo>) jComboBox2.getModel();
        dlm.removeAllElements();
    }//GEN-LAST:event_jComboBox2AncestorRemoved

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        try {
            messaggio.setTesto(jTextArea5.getText());
            guiController.cifraMessaggio(messaggio);
            jTextArea6.setText(messaggio.getTestoCifrato());
            jLabel9.setText("Continua a comporre, oppure invia");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        jButton7.setEnabled(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            messaggio.setTitolo(jTextField4.getText());
            if (jTextArea5.getText().equals("")) {
                messaggio.setTesto("** testo vuoto **");
            }
            boolean b = guiController.salvaMessaggioBozza(messaggio);
            if (b == false) {
                jLabel9.setText("Errore nel salvataggio bozza!");
            } else {
                jLabel9.setText("Salvato come bozza!");
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try {
            messaggio.setTitolo(jTextField4.getText());
            boolean b = guiController.spedisciMessaggio(messaggio);
            if (b == false) {
                jLabel9.setText("Errore nell'invio del messaggio!");
            } else {
                jLabel9.setText("Messaggio Inviato! Scegli un altro destinatario");
                setMessaggioEnabled(false);
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void messaggiInviatiListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_messaggiInviatiListValueChanged
        if (evt.getValueIsAdjusting() == false) {
            if (messaggiInviatiList.getSelectedIndex() == -1) {
                jTextArea2.setText("");
                jButton12.setEnabled(false);
            } else {
                MessaggioMittente md = (MessaggioMittente) messaggiInviatiList.getSelectedValue();
                jTextArea2.setText(md.getTesto());
                jButton12.setEnabled(true);
            }
        }
    }//GEN-LAST:event_messaggiInviatiListValueChanged

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        try {
            Messaggio daCancellare = (Messaggio) messaggiInviatiList.getSelectedValue();
            boolean b = guiController.eliminaMessaggioInviato(daCancellare);
            if (b == true) {
                DefaultListModel<MessaggioMittente> dlm = (DefaultListModel<MessaggioMittente>) messaggiInviatiList.getModel();
                dlm.removeElement(daCancellare);
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DefaultListModel<MessaggioDestinatario> dlm = (DefaultListModel<MessaggioDestinatario>) messaggiRicevutiList.getModel();
        dlm.clear();
        List<MessaggioDestinatario> listaMessaggiRicevuti = null;
        try {
            listaMessaggiRicevuti = guiController.elencaMessaggiRicevuti();
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (MessaggioDestinatario m : listaMessaggiRicevuti) {
            dlm.addElement(m);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void messaggiBozzaListAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_messaggiBozzaListAncestorAdded
        DefaultListModel<MessaggioMittente> dlm = (DefaultListModel<MessaggioMittente>) messaggiBozzaList.getModel();
        List<MessaggioMittente> listaBozze = null;
        try {
            listaBozze = guiController.elencaBozze();
        } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (MessaggioMittente m : listaBozze) {
            dlm.addElement(m);
        }
    }//GEN-LAST:event_messaggiBozzaListAncestorAdded

    private void messaggiBozzaListAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_messaggiBozzaListAncestorRemoved
        DefaultListModel<MessaggioMittente> dlm = (DefaultListModel<MessaggioMittente>) messaggiBozzaList.getModel();
        dlm.removeAllElements();
    }//GEN-LAST:event_messaggiBozzaListAncestorRemoved

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        MessaggioMittente daCancellare = (Messaggio) messaggiBozzaList.getSelectedValue();
        DefaultListModel<MessaggioMittente> dlm = (DefaultListModel<MessaggioMittente>) messaggiBozzaList.getModel();
        try {
            boolean b = guiController.eliminaMessaggioBozza(daCancellare);
            if (b == true) {
                dlm.removeElement(daCancellare);
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void messaggiBozzaListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_messaggiBozzaListValueChanged
        if (evt.getValueIsAdjusting() == false) {
            if (messaggiBozzaList.getSelectedIndex() == -1) {
                jTextArea3.setText("");
            } else {
                MessaggioMittente md = (MessaggioMittente) messaggiBozzaList.getSelectedValue();
                jTextArea3.setText(md.getTesto());
                jButton12.setEnabled(true);
            }
        }
    }//GEN-LAST:event_messaggiBozzaListValueChanged

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            Messaggio oraLetto = (Messaggio) messaggiRicevutiList.getSelectedValue();
            int indiceLetto = messaggiRicevutiList.getSelectedIndex();
            guiController.decifraMessaggio(oraLetto);
            oraLetto.setLetto(true);
            oraLetto.save();
            jTextArea1.setText(oraLetto.getTesto());
            DefaultListModel<MessaggioDestinatario> dlm = (DefaultListModel<MessaggioDestinatario>) messaggiRicevutiList.getModel();
            dlm.set(indiceLetto, oraLetto);
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        idDestinatario = ((Messaggio) messaggiRicevutiList.getSelectedValue()).getMittente().getId();
        jTabbedPane2.setSelectedIndex(3);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        idDestinatario = ((Messaggio) messaggiBozzaList.getSelectedValue()).getDestinatario().getId();
        titoloBozza = ((Messaggio) messaggiBozzaList.getSelectedValue()).getTitolo();
        testoBozza = jTextArea3.getText();
        jTabbedPane2.setSelectedIndex(3);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void setSdcWidgetEnabled(boolean b) {
        provaSdcButton.setEnabled(b);
        salvaSdcButton.setEnabled(b);
        testoProvaField.setEnabled(b);
        risultatoProvaField.setEnabled(b);
    }

    private void setMessaggioEnabled(boolean b) {
        jLabel8.setEnabled(b);
        jTextField4.setEnabled(b);
        jTextArea5.setEnabled(b);
        jTextArea6.setEnabled(b);
        jButton1.setEnabled(b);
        jButton7.setEnabled(b);
        jButton8.setEnabled(b);
        jTextArea5.setText("");
        jTextArea6.setText("");
        jTextField4.setText("");
    }

    private final GUIController guiController = GUIController.getInstance();
    private Messaggio messaggio = null;
    private int idDestinatario = -1;
    private String titoloBozza = null;
    private String testoBozza = null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton accettaPropostaButton;
    javax.swing.JButton calcolaMappaturaButton;
    javax.swing.JTextField chiaveCifraturaField;
    javax.swing.JPanel communicationPanel;
    javax.swing.JList compagniList;
    javax.swing.JTabbedPane comunicationTabs;
    javax.swing.JButton deleteSdcButton;
    javax.swing.JPanel elencoSdcPanel;
    javax.swing.JLabel errorLoginLabel;
    javax.swing.JLabel feedbackNuovoSdcLabel;
    javax.swing.JButton goToRegistrationButton;
    javax.swing.JButton inviaPropostaButton;
    javax.swing.JButton jButton1;
    javax.swing.JButton jButton10;
    javax.swing.JButton jButton12;
    javax.swing.JButton jButton14;
    javax.swing.JButton jButton15;
    javax.swing.JButton jButton2;
    javax.swing.JButton jButton3;
    javax.swing.JButton jButton4;
    javax.swing.JButton jButton5;
    javax.swing.JButton jButton7;
    javax.swing.JButton jButton8;
    javax.swing.JComboBox jComboBox1;
    javax.swing.JComboBox jComboBox2;
    javax.swing.JLabel jLabel1;
    javax.swing.JLabel jLabel2;
    javax.swing.JLabel jLabel3;
    javax.swing.JLabel jLabel4;
    javax.swing.JLabel jLabel5;
    javax.swing.JLabel jLabel6;
    javax.swing.JLabel jLabel7;
    javax.swing.JLabel jLabel8;
    javax.swing.JLabel jLabel9;
    javax.swing.JPanel jPanel1;
    javax.swing.JPanel jPanel10;
    javax.swing.JPanel jPanel11;
    javax.swing.JPanel jPanel12;
    javax.swing.JPanel jPanel13;
    javax.swing.JPanel jPanel14;
    javax.swing.JPanel jPanel15;
    javax.swing.JPanel jPanel16;
    javax.swing.JPanel jPanel17;
    javax.swing.JPanel jPanel18;
    javax.swing.JPanel jPanel19;
    javax.swing.JPanel jPanel2;
    javax.swing.JPanel jPanel21;
    javax.swing.JPanel jPanel22;
    javax.swing.JPanel jPanel23;
    javax.swing.JPanel jPanel24;
    javax.swing.JPanel jPanel25;
    javax.swing.JPanel jPanel3;
    javax.swing.JPanel jPanel4;
    javax.swing.JPanel jPanel5;
    javax.swing.JPanel jPanel6;
    javax.swing.JPanel jPanel7;
    javax.swing.JPanel jPanel8;
    javax.swing.JPanel jPanel9;
    javax.swing.JPasswordField jPasswordField1;
    javax.swing.JProgressBar jProgressBar1;
    javax.swing.JScrollPane jScrollPane1;
    javax.swing.JScrollPane jScrollPane10;
    javax.swing.JScrollPane jScrollPane11;
    javax.swing.JScrollPane jScrollPane12;
    javax.swing.JScrollPane jScrollPane13;
    javax.swing.JScrollPane jScrollPane14;
    javax.swing.JScrollPane jScrollPane2;
    javax.swing.JScrollPane jScrollPane3;
    javax.swing.JScrollPane jScrollPane4;
    javax.swing.JScrollPane jScrollPane5;
    javax.swing.JScrollPane jScrollPane6;
    javax.swing.JScrollPane jScrollPane8;
    javax.swing.JScrollPane jScrollPane9;
    javax.swing.JTabbedPane jTabbedPane1;
    javax.swing.JTabbedPane jTabbedPane2;
    javax.swing.JTextArea jTextArea1;
    javax.swing.JTextArea jTextArea2;
    javax.swing.JTextArea jTextArea3;
    javax.swing.JTextArea jTextArea5;
    javax.swing.JTextArea jTextArea6;
    javax.swing.JTextField jTextField1;
    javax.swing.JTextField jTextField2;
    javax.swing.JTextField jTextField3;
    javax.swing.JTextField jTextField4;
    javax.swing.JToolBar jToolBar1;
    javax.swing.JButton loginButton;
    javax.swing.JPanel loginFormPanel;
    javax.swing.JPanel loginPanel;
    javax.swing.JToolBar loginToolBar;
    javax.swing.JPanel messagePanel;
    javax.swing.JList messaggiBozzaList;
    javax.swing.JPanel messaggiBozzePanel;
    javax.swing.JPanel messaggiCreaPanel;
    javax.swing.JList messaggiInviatiList;
    javax.swing.JPanel messaggiInviatiPanel;
    javax.swing.JList messaggiRicevutiList;
    javax.swing.JPanel messaggiRicevutiPanel;
    javax.swing.JComboBox metodoCifraturaComboBox;
    javax.swing.JTextField nickLoginField;
    javax.swing.JPanel nuovoSdcPanel;
    javax.swing.JPasswordField passLoginField;
    javax.swing.JPanel personalPanel;
    javax.swing.JList proposteInviateValutateList;
    javax.swing.JPanel propostePanel;
    javax.swing.JList proposteRicevuteValutareList;
    javax.swing.JButton provaSdcButton;
    javax.swing.JPanel registrationPanel;
    javax.swing.JButton rifiutaPropostaButton;
    javax.swing.JTextField risultatoProvaField;
    javax.swing.JButton salvaSdcButton;
    javax.swing.JList sdcList;
    javax.swing.JList sdcNonPropostiList;
    javax.swing.JPanel sdcPanel;
    javax.swing.JTabbedPane sdcTabs;
    javax.swing.JTextField testoProvaField;
    // End of variables declaration//GEN-END:variables
}
